K.<z8> = GF(2^8)

G = [[                z8^7 + z8^6 + z8^4 + z8^3 + z8^2,                               z8^7 + z8^6 + z8^2,                               z8^5 + z8^4 + z8^3,                                        z8^3 + z8,                        z8^6 + z8^5 + z8^3 + z8^2,                   z8^5 + z8^4 + z8^3 + z8^2 + z8,               z8^7 + z8^6 + z8^5 + z8^3 + z8 + 1,                                      z8^4 + z8^3,                               z8^7 + z8^5 + z8^4,                                 z8^7 + z8^2 + z8,                          z8^5 + z8^4 + z8^2 + z8,               z8^7 + z8^6 + z8^4 + z8^3 + z8 + 1,                          z8^7 + z8^5 + z8^3 + z8,                    z8^6 + z8^4 + z8^3 + z8^2 + 1],
[                              z8^7 + z8^5 + z8^4,                                 z8^7 + z8^3 + z8,               z8^7 + z8^4 + z8^3 + z8^2 + z8 + 1,                               z8^5 + z8^4 + z8^3,                   z8^6 + z8^4 + z8^3 + z8^2 + z8,                                         z8^4 + 1,                                    z8^5 + z8 + 1,      z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + z8^2 + 1,                             z8^7 + z8^6 + z8 + 1,                    z8^7 + z8^6 + z8^5 + z8^2 + 1,                          z8^4 + z8^3 + z8^2 + z8,                                      z8^6 + z8^2,                                      z8^7 + z8^6,                               z8^7 + z8^5 + z8^4],
[                                 z8^7 + z8^4 + 1,                   z8^5 + z8^4 + z8^3 + z8^2 + z8,                                    z8^6 + z8 + 1,                           z8^6 + z8^3 + z8^2 + 1,                    z8^6 + z8^4 + z8^3 + z8^2 + 1,                                               z8,                      z8^5 + z8^3 + z8^2 + z8 + 1,                   z8^6 + z8^5 + z8^3 + z8^2 + z8,                        z8^7 + z8^5 + z8^4 + z8^3,                                      z8^5 + z8^2,                                    z8^2 + z8 + 1,                               z8^7 + z8^6 + z8^4,                    z8^7 + z8^5 + z8^4 + z8^2 + 1, z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + z8^2 + z8 + 1],
[           z8^7 + z8^5 + z8^4 + z8^3 + z8^2 + z8,                   z8^7 + z8^6 + z8^4 + z8^2 + z8,                           z8^5 + z8^3 + z8^2 + 1,                          z8^7 + z8^5 + z8^3 + z8,                      z8^6 + z8^4 + z8^3 + z8 + 1,                           z8^7 + z8^6 + z8^2 + 1,                                      z8^7 + z8^2,                                  z8^4 + z8^3 + 1,               z8^7 + z8^6 + z8^3 + z8^2 + z8 + 1,               z8^7 + z8^4 + z8^3 + z8^2 + z8 + 1,                    z8^7 + z8^5 + z8^4 + z8^2 + 1,                          z8^6 + z8^4 + z8^2 + z8,        z8^7 + z8^5 + z8^4 + z8^3 + z8^2 + z8 + 1,               z8^7 + z8^6 + z8^3 + z8^2 + z8 + 1],
[                  z8^7 + z8^5 + z8^4 + z8^2 + z8,                   z8^5 + z8^4 + z8^3 + z8^2 + z8,                                      z8^5 + z8^3,                      z8^5 + z8^4 + z8^3 + z8 + 1,                               z8^6 + z8^5 + z8^3,                        z8^7 + z8^6 + z8^5 + z8^2,                           z8^7 + z8^6 + z8^2 + 1,                                    z8^5 + z8 + 1,                                  z8^4 + z8^3 + 1,                                      z8^6 + z8^5,                      z8^5 + z8^3 + z8^2 + z8 + 1,                   z8^7 + z8^6 + z8^4 + z8^3 + z8,                                      z8^7 + z8^2,                   z8^7 + z8^6 + z8^5 + z8^3 + z8],
[              z8^7 + z8^5 + z8^3 + z8^2 + z8 + 1,                        z8^7 + z8^6 + z8^4 + z8^3,                                      z8^7 + z8^4,                    z8^7 + z8^6 + z8^5 + z8^3 + 1,                                         z8^5 + 1,                    z8^7 + z8^4 + z8^3 + z8^2 + 1,                        z8^5 + z8^4 + z8^3 + z8^2,                             z8^7 + z8^6 + z8 + 1,                                    z8^2 + z8 + 1,                                      z8^7 + z8^2,                                             z8^5,                          z8^5 + z8^4 + z8^2 + z8,                    z8^7 + z8^5 + z8^3 + z8^2 + 1,        z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + z8 + 1],
[                          z8^6 + z8^4 + z8^3 + 1,                                         z8^6 + 1,                      z8^6 + z8^4 + z8^3 + z8 + 1,                          z8^5 + z8^4 + z8^3 + z8,                                  z8^5 + z8^4 + 1,                             z8^7 + z8^4 + z8 + 1,                             z8^7 + z8^6 + z8 + 1,                           z8^6 + z8^3 + z8^2 + 1,                                  z8^5 + z8^2 + 1,                           z8^5 + z8^3 + z8^2 + 1,                                                0,                   z8^6 + z8^4 + z8^3 + z8^2 + z8,                        z8^6 + z8^4 + z8^3 + z8^2,                                  z8^4 + z8^2 + 1],
[                       z8^7 + z8^6 + z8^4 + z8^3,                          z8^6 + z8^3 + z8^2 + z8,                           z8^7 + z8^5 + z8^2 + 1,                           z8^7 + z8^6 + z8^2 + 1,                                 z8^7 + z8^6 + z8,                                  z8^6 + z8^3 + 1,                   z8^7 + z8^6 + z8^3 + z8^2 + z8,                      z8^7 + z8^5 + z8^2 + z8 + 1,                      z8^6 + z8^4 + z8^3 + z8 + 1,               z8^7 + z8^4 + z8^3 + z8^2 + z8 + 1,                                             z8^5,                           z8^7 + z8^6 + z8^4 + 1,                               z8^6 + z8^5 + z8^4,                           z8^7 + z8^5 + z8^4 + 1],
[                          z8^7 + z8^5 + z8^2 + 1,                           z8^6 + z8^5 + z8^2 + 1,               z8^7 + z8^6 + z8^4 + z8^2 + z8 + 1,                                  z8^6 + z8^5 + 1,                                  z8^6 + z8^4 + 1,                                                0,                 z8^7 + z8^6 + z8^5 + z8^4 + z8^3,                           z8^5 + z8^4 + z8^2 + 1,                        z8^7 + z8^6 + z8^5 + z8^3,                             z8^5 + z8^4 + z8 + 1,               z8^7 + z8^6 + z8^4 + z8^2 + z8 + 1,                                      z8^6 + z8^2,                               z8^7 + z8^6 + z8^3,                                  z8^4 + z8^3 + 1],
[                              z8^7 + z8^6 + z8^3,                                         z8^7 + 1,                        z8^6 + z8^5 + z8^4 + z8^2,                           z8^5 + z8^4 + z8^2 + 1,                      z8^7 + z8^6 + z8^4 + z8 + 1, z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + z8^2 + z8 + 1,                                      z8^6 + z8^3,                           z8^7 + z8^3 + z8^2 + 1,                                               z8,                      z8^5 + z8^4 + z8^2 + z8 + 1,                      z8^6 + z8^5 + z8^3 + z8 + 1,                        z8^7 + z8^6 + z8^3 + z8^2,                               z8^5 + z8^3 + z8^2,                             z8^5 + z8^4 + z8 + 1],
[                                               0,                   z8^6 + z8^5 + z8^4 + z8^3 + z8,        z8^7 + z8^5 + z8^4 + z8^3 + z8^2 + z8 + 1,                 z8^7 + z8^6 + z8^5 + z8^4 + z8^2,                             z8^5 + z8^3 + z8 + 1,                      z8^7 + z8^5 + z8^4 + z8 + 1,                               z8^7 + z8^5 + z8^4,        z8^6 + z8^5 + z8^4 + z8^3 + z8^2 + z8 + 1,                    z8^7 + z8^6 + z8^5 + z8^2 + 1,                               z8^5 + z8^4 + z8^3,        z8^7 + z8^6 + z8^5 + z8^3 + z8^2 + z8 + 1,            z8^7 + z8^6 + z8^4 + z8^3 + z8^2 + z8,                                  z8^7 + z8^4 + 1,                    z8^6 + z8^5 + z8^4 + z8^2 + 1],
[                                       z8^3 + z8,                                         z8^3 + 1,                             z8^4 + z8^3 + z8 + 1,                                  z8^5 + z8^3 + 1,                        z8^7 + z8^6 + z8^5 + z8^2,                   z8^7 + z8^6 + z8^4 + z8^2 + z8,                          z8^6 + z8^5 + z8^4 + z8,                                         z8^6 + 1,                   z8^7 + z8^6 + z8^3 + z8^2 + z8,                               z8^7 + z8^3 + z8^2,                                             z8^4,                   z8^6 + z8^5 + z8^4 + z8^3 + z8,                               z8^6 + z8^5 + z8^2,                      z8^5 + z8^3 + z8^2 + z8 + 1],
[            z8^7 + z8^6 + z8^5 + z8^3 + z8^2 + 1,                                 z8^7 + z8^3 + z8,                                             z8^5,                          z8^6 + z8^5 + z8^2 + z8,        z8^7 + z8^6 + z8^4 + z8^3 + z8^2 + z8 + 1, z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + z8^2 + z8 + 1,                                 z8^7 + z8^4 + z8,                      z8^7 + z8^5 + z8^4 + z8 + 1,                             z8^6 + z8^4 + z8 + 1,             z8^7 + z8^6 + z8^5 + z8^4 + z8^2 + 1,                          z8^7 + z8^6 + z8^5 + z8,                   z8^7 + z8^5 + z8^3 + z8^2 + z8,               z8^7 + z8^6 + z8^5 + z8^2 + z8 + 1,               z8^6 + z8^5 + z8^4 + z8^3 + z8 + 1],
[                                 z8^6 + z8^4 + 1,                               z8^6 + z8^3 + z8^2,                          z8^6 + z8^5 + z8^3 + z8,                 z8^7 + z8^6 + z8^5 + z8^3 + z8^2,                               z8^6 + z8^5 + z8^2,                    z8^6 + z8^5 + z8^3 + z8^2 + 1,                          z8^6 + z8^3 + z8^2 + z8,                             z8^7 + z8^3 + z8 + 1,               z8^7 + z8^4 + z8^3 + z8^2 + z8 + 1,                                    z8^3 + z8 + 1,                               z8^6 + z8^4 + z8^2,                                      z8^7 + z8^4,                   z8^6 + z8^5 + z8^4 + z8^2 + z8,                    z8^6 + z8^5 + z8^3 + z8^2 + 1]]

H = [[                   z8^7 + z8^3 + z8^2 + 1,                           z8^4 + z8^3 + 1,                   z8^6 + z8^4 + z8^3 + z8,             z8^6 + z8^5 + z8^4 + z8^2 + 1,     z8^7 + z8^5 + z8^4 + z8^3 + z8^2 + z8,                                      z8^6,                           z8^4 + z8^3 + 1,                 z8^6 + z8^5 + z8^4 + z8^3,                        z8^6 + z8^5 + z8^3,                      z8^7 + z8^5 + z8 + 1,                   z8^6 + z8^4 + z8^3 + z8,            z8^7 + z8^6 + z8^4 + z8^3 + z8,                   z8^6 + z8^4 + z8^2 + z8,        z8^7 + z8^6 + z8^3 + z8^2 + z8 + 1],
[                         z8^6 + z8^2 + z8,                   z8^6 + z8^5 + z8^3 + z8,                 z8^6 + z8^5 + z8^4 + z8^2,                      z8^7 + z8^5 + z8 + 1,        z8^7 + z8^6 + z8^5 + z8^4 + z8 + 1,               z8^6 + z8^5 + z8^2 + z8 + 1,                             z8^7 + z8 + 1,                                  z8^2 + 1,                               z8^5 + z8^2,   z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + z8^2,                      z8^5 + z8^2 + z8 + 1,                      z8^5 + z8^2 + z8 + 1,             z8^6 + z8^5 + z8^4 + z8^2 + 1,                      z8^7 + z8^2 + z8 + 1],
[           z8^6 + z8^5 + z8^4 + z8^3 + z8,                      z8^6 + z8^4 + z8 + 1,                               z8^7 + z8^6,      z8^7 + z8^6 + z8^4 + z8^3 + z8^2 + 1,                      z8^5 + z8^2 + z8 + 1,             z8^7 + z8^6 + z8^4 + z8^3 + 1,                 z8^7 + z8^6 + z8^4 + z8^2,                 z8^5 + z8^4 + z8^3 + z8^2,                                    z8 + 1,             z8^6 + z8^4 + z8^3 + z8^2 + 1,                                  z8^2 + 1, z8^7 + z8^5 + z8^4 + z8^3 + z8^2 + z8 + 1,                               z8^7 + z8^6,                           z8^7 + z8^3 + 1],
[                z8^7 + z8^4 + z8^3 + z8^2,      z8^7 + z8^6 + z8^5 + z8^4 + z8^2 + 1,               z8^7 + z8^5 + z8^2 + z8 + 1,                               z8^3 + z8^2,                        z8^4 + z8^3 + z8^2,            z8^5 + z8^4 + z8^3 + z8^2 + z8,                      z8^7 + z8^4 + z8 + 1,             z8^7 + z8^4 + z8^3 + z8^2 + 1,                                 z8^4 + z8, z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + z8 + 1,                        z8^6 + z8^5 + z8^2,               z8^7 + z8^6 + z8^3 + z8 + 1,               z8^6 + z8^4 + z8^3 + z8 + 1,                          z8^7 + z8^3 + z8],
[            z8^7 + z8^6 + z8^5 + z8^4 + 1,                    z8^5 + z8^3 + z8^2 + 1,                                 z8^4 + z8,                    z8^6 + z8^5 + z8^4 + 1,                                      z8^6,                    z8^7 + z8^5 + z8^2 + 1,               z8^7 + z8^6 + z8^2 + z8 + 1,            z8^7 + z8^5 + z8^3 + z8^2 + z8,                      z8^7 + z8^3 + z8 + 1,                    z8^7 + z8^5 + z8^3 + 1,                           z8^7 + z8^4 + 1,                   z8^7 + z8^4 + z8^3 + z8,                    z8^6 + z8^5 + z8^4 + 1,                 z8^6 + z8^5 + z8^4 + z8^3],
[                   z8^7 + z8^4 + z8^2 + 1,                               z8^5 + z8^3,          z8^7 + z8^6 + z8^4 + z8^3 + z8^2,                          z8^7 + z8^4 + z8,          z8^7 + z8^6 + z8^4 + z8^3 + z8^2,                    z8^5 + z8^4 + z8^3 + 1,                      z8^3 + z8^2 + z8 + 1,        z8^6 + z8^5 + z8^4 + z8^2 + z8 + 1,                                  z8^6 + 1,                               z8^3 + z8^2,             z8^7 + z8^5 + z8^4 + z8^2 + 1,        z8^7 + z8^5 + z8^4 + z8^3 + z8 + 1,        z8^5 + z8^4 + z8^3 + z8^2 + z8 + 1, z8^7 + z8^6 + z8^5 + z8^3 + z8^2 + z8 + 1],
[                       z8^7 + z8^6 + z8^5,                        z8^6 + z8^5 + z8^3,                   z8^6 + z8^5 + z8^3 + z8,                               z8^5 + z8^4,                   z8^7 + z8^5 + z8^4 + z8,                                      z8^2,                                      z8^6,                                  z8^6 + 1,                 z8^7 + z8^5 + z8^4 + z8^3,                               z8^7 + z8^2,               z8^7 + z8^3 + z8^2 + z8 + 1,      z8^7 + z8^6 + z8^4 + z8^3 + z8^2 + 1,               z8^7 + z8^6 + z8^2 + z8 + 1,        z8^7 + z8^6 + z8^3 + z8^2 + z8 + 1],
[                   z8^7 + z8^5 + z8^3 + 1,               z8^6 + z8^3 + z8^2 + z8 + 1,             z8^6 + z8^5 + z8^3 + z8^2 + 1,                      z8^3 + z8^2 + z8 + 1,                        z8^7 + z8^3 + z8^2,                                      z8^2,               z8^6 + z8^5 + z8^4 + z8 + 1,                           z8^3 + z8^2 + 1, z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + z8 + 1,                               z8^6 + z8^3,                    z8^7 + z8^5 + z8^4 + 1,                             z8^4 + z8 + 1,                           z8^5 + z8^4 + 1,             z8^5 + z8^4 + z8^3 + z8^2 + 1],
[       z8^7 + z8^6 + z8^4 + z8^2 + z8 + 1,                          z8^6 + z8^3 + z8,            z8^6 + z8^5 + z8^3 + z8^2 + z8,                           z8^4 + z8^2 + 1,                               z8^6 + z8^2,                          z8^6 + z8^3 + z8,                   z8^6 + z8^4 + z8^3 + z8,            z8^5 + z8^4 + z8^3 + z8^2 + z8,                        z8^7 + z8^6 + z8^2,                                  z8^2 + 1,                        z8^6 + z8^5 + z8^4,                    z8^7 + z8^6 + z8^3 + 1,            z8^7 + z8^6 + z8^5 + z8^2 + z8,                    z8^7 + z8^6 + z8^3 + 1],
[                z8^7 + z8^6 + z8^3 + z8^2,                    z8^7 + z8^5 + z8^3 + 1,                    z8^7 + z8^6 + z8^3 + 1, z8^7 + z8^6 + z8^4 + z8^3 + z8^2 + z8 + 1,                    z8^4 + z8^3 + z8^2 + 1,                               z8^7 + z8^3,             z8^6 + z8^4 + z8^3 + z8^2 + 1,                             z8^2 + z8 + 1,                 z8^7 + z8^6 + z8^3 + z8^2,                   z8^6 + z8^5 + z8^3 + z8,                        z8^4 + z8^3 + z8^2, z8^7 + z8^6 + z8^5 + z8^4 + z8^2 + z8 + 1,                      z8^6 + z8^2 + z8 + 1,        z8^6 + z8^5 + z8^4 + z8^3 + z8 + 1],
[                       z8^7 + z8^6 + z8^5,      z8^6 + z8^5 + z8^4 + z8^3 + z8^2 + 1,                    z8^7 + z8^5 + z8^2 + 1,                                      z8^3, z8^7 + z8^6 + z8^5 + z8^4 + z8^2 + z8 + 1,             z8^7 + z8^4 + z8^3 + z8^2 + 1,                           z8^7 + z8^4 + 1,                 z8^7 + z8^5 + z8^4 + z8^2,                    z8^4 + z8^3 + z8^2 + 1,     z8^6 + z8^5 + z8^4 + z8^3 + z8^2 + z8,            z8^6 + z8^4 + z8^3 + z8^2 + z8,               z8^7 + z8^6 + z8^2 + z8 + 1,             z8^6 + z8^4 + z8^3 + z8^2 + 1,                   z8^5 + z8^4 + z8^2 + z8],
[                                 z8^3 + 1,                    z8^7 + z8^3 + z8^2 + 1,               z8^7 + z8^6 + z8^2 + z8 + 1,                             z8^6 + z8 + 1,          z8^7 + z8^5 + z8^4 + z8^3 + z8^2,                 z8^7 + z8^6 + z8^5 + z8^2,                          z8^7 + z8^3 + z8, z8^7 + z8^6 + z8^4 + z8^3 + z8^2 + z8 + 1,                          z8^4 + z8^3 + z8,                                  z8^7 + 1,               z8^7 + z8^5 + z8^2 + z8 + 1,                               z8^6 + z8^2,                                  z8^4 + 1,     z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + z8],
[z8^7 + z8^6 + z8^5 + z8^3 + z8^2 + z8 + 1,            z8^7 + z8^5 + z8^4 + z8^2 + z8,                               z8^7 + z8^4,               z8^5 + z8^3 + z8^2 + z8 + 1,                               z8^6 + z8^4,                               z8^6 + z8^2,                    z8^7 + z8^6 + z8^2 + 1,                   z8^7 + z8^6 + z8^2 + z8,               z8^5 + z8^4 + z8^2 + z8 + 1,                               z8^6 + z8^3,        z8^7 + z8^4 + z8^3 + z8^2 + z8 + 1,        z8^7 + z8^6 + z8^5 + z8^3 + z8 + 1,                                         0,                           z8^7 + z8^3 + 1],
[                  z8^6 + z8^5 + z8^2 + z8,                           z8^3 + z8^2 + 1,                   z8^5 + z8^4 + z8^2 + z8,                   z8^6 + z8^4 + z8^2 + z8,      z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + 1,        z8^7 + z8^6 + z8^4 + z8^2 + z8 + 1,                    z8^7 + z8^6 + z8^2 + 1,                      z8^6 + z8^2 + z8 + 1,      z8^7 + z8^6 + z8^5 + z8^4 + z8^3 + 1,                   z8^7 + z8^6 + z8^2 + z8,                    z8^7 + z8^5 + z8^4 + 1,                                      z8^6,                           z8^4 + z8^3 + 1,                          z8^6 + z8^3 + z8]]

G = Matrix(G)
H = Matrix(H)
c = [8, 1, 3, 1, 7, 76, 196, 221, 560, 393, 21084, 3554312]
m = [9, 5, 7, 13, 17, 97, 241, 257, 641, 673, 65537, 6700417]
flag = int(CRT(c, m))
assert G**flag == H
# print(flag)
order = int(G.multiplicative_order())
from Crypto.Util.number import *


while b'_' not in long_to_bytes(flag):
    flag += order
print(long_to_bytes(flag))


# assert G**flag == H
# order = int(G.multiplicative_order())
# from Crypto.Util.number import *
# factors = factor(order)
# c = []
# m = []
# from Crypto.Util.number import *
# from tqdm import tqdm
# for fac in factors:
#     p, e = fac
#     temp_ord = p^e
#     s = order // temp_ord
#     Gs = G**s
#     Hs = H**s
#     Gs_temp = Gs
#     for i in tqdm(range(1, temp_ord)):
#         if Gs_temp == Hs:
#             print(i)
#             c.append(i)
#             m.append(temp_ord)
#             # print(long_to_bytes(int(CRT(c, m))))
#             break
#         Gs_temp *= Gs
# print(c)
# print(m)
# print(int(CRT(c, m)))
