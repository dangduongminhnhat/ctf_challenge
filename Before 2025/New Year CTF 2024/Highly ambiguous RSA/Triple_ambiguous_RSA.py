from Crypto.Util.number import bytes_to_long, GCD, inverse, long_to_bytes
from sympy.ntheory.modular import solve_congruence
import string
       
n1 = 1852892720062887225761965098961519184717028045747184821229381416690649150175077469195015762879827
e1 = 18712
n2 = 1684786560529453911475754845780536300328197792513126663487817526891350560429162837595257498214731
e2 = 17656
n3 = 1476397917727380110001203955119376017350831987887155549202221944834157018381937476166521375696257
e3 = 19407
c  = 611696235674033015624831923566847674953519491228623379258607782032635868791588102056975818050929

flag = b'grodno{REDACTED}'
m = bytes_to_long(flag)

c = pow(m, e1, n1)
c = pow(c, e2, n2)
c = pow(c, e3, n3)

print (f"n1 = {n1}")
print (f"e1 = {e1}")
print (f"n2 = {n2}")
print (f"e2 = {e2}")
print (f"n3 = {n3}")
print (f"e3 = {e3}")
print (f"c  = {c}")

# Output
n1 = 1852892720062887225761965098961519184717028045747184821229381416690649150175077469195015762879827
e1 = 18712
n2 = 1684786560529453911475754845780536300328197792513126663487817526891350560429162837595257498214731
e2 = 17656
n3 = 1476397917727380110001203955119376017350831987887155549202221944834157018381937476166521375696257
e3 = 19407
c = 611696235674033015624831923566847674953519491228623379258607782032635868791588102056975818050929
